(include_subdirs unqualified)

(executable
  (name Hyper)
  (public_name Hyper)
  (modules :standard)
  (preprocess (pps pacomb.ppx))
  (libraries unix threads zarith gles3 gmp pacomb imagelib sqlite3))

(rule
  (targets lines_shader.ml)
  (action (with-stdout-to lines_shader.ml (progn
    (echo "let vertex = String.trim \"") ; hack to remove newline.
    (cat lines_vertex.glsl)
    (echo "\"\n")
    (echo "let fragment = String.trim \"") ; hack to remove newline.
    (cat lines_fragment.glsl)
    (echo "\"\n")
    ))))

(rule
  (targets triangles_shader.ml)
  (action (with-stdout-to triangles_shader.ml (progn
    (echo "let vertex = String.trim \"") ; hack to remove newline.
    (cat triangles_vertex.glsl)
    (echo "\"\n")
    (echo "let fragment = String.trim \"") ; hack to remove newline.
    (cat triangles_fragment.glsl)
    (echo "\"\n")
    ))))

(rule
   (target FFieldMake.ml)
   (deps FieldMake.ml)
   (action (with-stdout-to %{target}
     (run sed "s/Make(R:SMin)/Make(R:SMin with type t = float)/" %{deps}))))

(rule
   (target FVector.ml)
   (deps Vector.ml)
   (action (with-stdout-to %{target}
     (run sed "s/Make(R:S)/Make(R:S with type t = float)/" %{deps}))))

(rule
   (target FPolynomial.ml)
   (deps Polynomial.ml)
   (action (with-stdout-to %{target}
     (run sed "s/Make(R:S)/Make(R:S with type t = float)/" %{deps}))))